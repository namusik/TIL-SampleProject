version: "3.9"

services:
  kafka:
    image: apache/kafka:4.1.0 # Apache 공식 이미지 (Kafka 4.1.0)
    container_name: kafka-facam # 컨테이너 이름
    restart: no
    ports:
      - "9092:9092" # 호스트에서 접근할 Kafka 브로커 포트
    environment:
      # ────────────── KRaft(= ZK 제거) 단일 프로세스 모드 ──────────────
      KAFKA_PROCESS_ROLES: "broker,controller" # 브로커 + 컨트롤러 역할 하나의 프로세스가 수행. (KRaft 단일 노드). Kafka 4.x는 ZooKeeper가 제거되어 KRaft 전용
      KAFKA_NODE_ID: "1" # 노드 고유 ID (클러스터 내 유일)

      # ────────────── 리스너/포트 구성 ──────────────
      KAFKA_LISTENERS: "PLAINTEXT://:9092,CONTROLLER://:9093" # PLAINTEXT://:9092 = 클라이언트 연결용, CONTROLLER://:9093 = 컨트롤러 통신용
      KAFKA_CONTROLLER_LISTENER_NAMES: "CONTROLLER" # 컨트롤러 역할이 사용할 리스너 이름.
      KAFKA_INTER_BROKER_LISTENER_NAME: "PLAINTEXT" # 브로커 간 통신에 사용할 리스너.
      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://localhost:9092" # 클라이언트가 접속할 때 보게 되는 주소를 명시. 로컬 개발이라면 PLAINTEXT://localhost:9092가 안전합니다. 도커 환경에서는 이 값이 매우 중요합니다(호스트/컨테이너 네트워킹 이슈 방지)

      # ────────────── KRaft 컨트롤러 쿼럼 구성 ──────────────
      # "nodeId@host:controllerPort" 목록. 단일 노드는 1개만 지정.
      # 단일 노드는 1@kafka:9093(컨테이너 이름 kafka, 컨트롤러 포트 9093)처럼 1개만 지정하면 됩니다. 멀티 노드면 3개 이상 홀수로 구성. (KRaft 설정 패턴은 공식/커뮤니티 문서에서 동일하게 안내)
      KAFKA_CONTROLLER_QUORUM_VOTERS: "1@kafka:9093"

      # ────────────── 단일 노드에 필요한 최소 복제/ISR 값 ──────────────
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: "1" # 오프셋 내부 토픽의 복제본 개수
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: "1" # 트랜잭션 상태 내부 토픽의 복제본 개수.
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: "1" # 트랜잭션 상태 토픽의 최소 ISR(In-Sync Replicas) 요구치. 복제본이 1개뿐인 개발용 단일 노드에서 필요

      # ────────────── KRaft 클러스터 ID ──────────────
      # 고정 UUID를 지정(예시). 필요시 임의 UUID로 교체 가능.
      # (kafka-storage.sh random-uuid 로 생성 가능)
      CLUSTER_ID: "4L6g3nShT-eMCtK--X86sw"

      # ────────────── 로그/데이터 경로 ──────────────
      KAFKA_LOG_DIRS: "/var/lib/kafka/data"

    volumes:
      - kafka-data:/var/lib/kafka/data # 브로커 로그/메타데이터 영속화

volumes:
  kafka-data:
